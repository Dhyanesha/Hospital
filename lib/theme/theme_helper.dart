import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.cyan400,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: colorScheme.primary,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(24.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      floatingActionButtonTheme: FloatingActionButtonThemeData(
        backgroundColor: colorScheme.primary,
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.black900,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 16.fSize,
          fontFamily: 'DM Sans',
          fontWeight: FontWeight.w400,
        ),
        bodyMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w300,
        ),
        bodySmall: TextStyle(
          color: colorScheme.primary,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.cyan400,
          fontSize: 30.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
        headlineMedium: TextStyle(
          color: appTheme.indigoA200,
          fontSize: 28.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        headlineSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 24.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelMedium: TextStyle(
          color: colorScheme.primaryContainer,
          fontSize: 10.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        labelSmall: TextStyle(
          color: colorScheme.onPrimaryContainer,
          fontSize: 8.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: colorScheme.primary,
          fontSize: 20.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: colorScheme.primary,
          fontSize: 18.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w500,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray60001,
          fontSize: 14.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFFFFFFF),
    primaryContainer: Color(0XFF515151),

    // Error colors
    errorContainer: Color(0XFF2BCBC1),
    onErrorContainer: Color(0XFF292929),

    // On colors(text colors)
    onPrimary: Color(0XFF2F2E41),
    onPrimaryContainer: Color(0XE5FFFFFF),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Amber
  Color get amberA400 => Color(0XFFFFC600);

  // Black
  Color get black900 => Color(0XFF000000);

  // BlueGray
  Color get blueGray100 => Color(0XFFCCCCCC);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF868686);
  Color get blueGray800 => Color(0XFF3F3D56);
  Color get blueGray900 => Color(0XFF373737);
  Color get blueGray90001 => Color(0XFF303437);

  // Cyan
  Color get cyan400 => Color(0XFF2CCBC2);
  Color get cyan50 => Color(0XFFD5FFFA);
  Color get cyan800 => Color(0XFF00738C);
  Color get cyanA200 => Color(0XFF35FFF3);
  Color get cyanA700 => Color(0XFF00AFD6);

  // DeepOrange
  Color get deepOrange100 => Color(0XFFFFB8B8);

  // DeepPurple
  Color get deepPurple100 => Color(0XFFD4B6FF);
  Color get deepPurpleA200 => Color(0XFF786FFF);

  // Gray
  Color get gray100 => Color(0XFFF4F4F4);
  Color get gray10001 => Color(0XFFF6F6F6);
  Color get gray10002 => Color(0XFFF2F3F4);
  Color get gray10003 => Color(0XFFF2F2F2);
  Color get gray200 => Color(0XFFEDEDED);
  Color get gray20001 => Color(0XFFEAEAEA);
  Color get gray300 => Color(0XFFE0E0E0);
  Color get gray30001 => Color(0XFFE6E6E6);
  Color get gray30002 => Color(0XFFE1E1E1);
  Color get gray400 => Color(0XFFC2C2C2);
  Color get gray50 => Color(0XFFF8F8F8);
  Color get gray500 => Color(0XFF9B9B9B);
  Color get gray5001 => Color(0XFFF2F8FF);
  Color get gray600 => Color(0XFF737373);
  Color get gray60001 => Color(0XFF7C7C7C);
  Color get gray60002 => Color(0XFF6E6E6E);
  Color get gray700 => Color(0XFF575757);
  Color get gray70001 => Color(0XFF5A5A5A);
  Color get gray70002 => Color(0XFF636363);
  Color get gray70003 => Color(0XFF616161);
  Color get gray80087 => Color(0X87444444);

  // Green
  Color get green300 => Color(0XFF7CDE86);

  // Indigo
  Color get indigoA100 => Color(0XFF8E8CFF);
  Color get indigoA200 => Color(0XFF6C63FF);

  // LightGreen
  Color get lightGreenA100 => Color(0XFFB6FF7C);
  Color get lightGreenA700 => Color(0XFF5BFF32);

  // Purple
  Color get purpleA100 => Color(0XFFF862FF);
  Color get purpleA10001 => Color(0XFFEF65FF);

  // Red
  Color get redA700 => Color(0XFFC10000);

  // Teal
  Color get teal900 => Color(0XFF144845);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
